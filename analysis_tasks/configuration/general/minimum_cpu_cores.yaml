id: minimum_cpu_cores
name: Minimum CPU Core Count Check
description: Verifies that each broker has at least 4 CPU cores for adequate performance
category: configuration

prompt: |
  Analyze CPU core count for each Kafka broker to ensure adequate processing capacity:
  
  System data: {system}
  
  CRITICAL: You MUST analyze BROKER system data, NOT bastion host data.
  - The system data includes information from brokers/broker_*/system/ directories
  - Each broker (broker_11, broker_12, broker_13, broker_14, broker_15, broker_16) has its own lscpu.txt file
  - Look for paths like "brokers/broker_11/system/lscpu.txt" in the provided data
  - DO NOT analyze system/bastion/ data - that's for the SSH bastion, not Kafka brokers
  - Identify brokers by their directory names: broker_11, broker_12, broker_13, broker_14, broker_15, broker_16
  
  IMPORTANT: Extract CPU core count from system information for each broker.
  CRITICAL: Apply analysis rules CONSISTENTLY to ALL brokers. If brokers have identical configurations, they MUST receive identical evaluations.
  
  
  Step 1: Extract Data from Each Broker
  1. Find CPU core count from each broker's lscpu output, /proc/cpuinfo, or similar system information
  2. Look for "CPU(s)" field in lscpu or count processor entries in /proc/cpuinfo
  3. Extract total number of available CPU cores (logical processors) for EACH broker separately
  4. Ensure you're analyzing broker_11, broker_12, broker_13, etc., NOT the bastion host
  
  Step 2: CPU Core Analysis
  For each broker, check if CPU core count >= 4:
  - If cores < 4: WARNING (insufficient CPU resources for Kafka workload)
  - If cores >= 4: INFO (adequate CPU resources available)
  
  CRITICAL: The comparison must be against the minimum threshold of 4 cores
  
  Step 3: Provide Specific Results
  IMPORTANT: Analyze each broker individually and report per-broker findings.
  CRITICAL: The count of affected brokers (X) MUST exactly match the number of broker instances you list with issues.
  - If all 6 brokers have <4 cores, report "6 out of 6 brokers" and list ALL 6 brokers
  - Do NOT report bastion host statistics as broker statistics
  
  If ALL brokers have adequate CPU cores (>=4), return:
  {
    "findings": [
      {
        "type": "minimum_cpu_cores_check",
        "description": "All X brokers have adequate CPU core count meeting minimum requirement of 4 cores (lowest: Y cores). Sufficient processing capacity available for Kafka workloads.",
        "severity": "info",
        "brokers_analyzed": [
          {"broker_id": "broker_0", "cpu_cores": 8, "meets_minimum": true},
          {"broker_id": "broker_1", "cpu_cores": 12, "meets_minimum": true}
        ],
        "recommendation": "CPU configuration is adequate for typical Kafka workloads"
      }
    ]
  }
  
  If ANY brokers have insufficient CPU cores (<4), return:
  {
    "findings": [
      {
        "type": "minimum_cpu_cores_check",
        "description": "WARNING: X out of Y brokers have insufficient CPU core count below minimum requirement of 4 cores. Affected brokers: [LIST ALL AFFECTED BROKERS e.g., broker_11 (2 cores), broker_12 (2 cores), broker_13 (2 cores), etc.]. This is an inadequate configuration that may severely impact Kafka performance, especially under moderate to high load conditions.",
        "severity": "warning",
        "brokers_analyzed": [
          {"broker_id": "broker_0", "cpu_cores": 8, "meets_minimum": true},
          {"broker_id": "broker_1", "cpu_cores": 2, "meets_minimum": false},
          {"broker_id": "broker_2", "cpu_cores": 6, "meets_minimum": true},
          {"broker_id": "broker_3", "cpu_cores": 1, "meets_minimum": false}
        ],
        "recommendation": "Upgrade to instances with at least 4 CPU cores per broker. Consider 8+ cores for production workloads with high throughput requirements."
      }
    ]
  }
  
  Performance Impact Explanation:
  - Kafka brokers handle multiple concurrent operations: network I/O, disk I/O, compression, replication
  - Each operation benefits from dedicated CPU resources for optimal performance
  - Minimum 4 cores allows for parallel processing of producer/consumer requests
  - Insufficient CPU cores create bottlenecks that limit throughput and increase latency
  - Modern Kafka deployments typically require 8+ cores for production workloads
  - CPU-bound operations like compression, serialization, and network handling need adequate processing power
  - The 4-core minimum represents the bare minimum for lightweight development/testing scenarios
  
  IMPORTANT: Always include specific numerical values (core count) for each broker in the description.

include_data:
  - system

severity_keywords:
  "insufficient CPU": "warning"
  "below minimum requirement": "warning"
  "inadequate configuration": "warning"
  "severely impact": "warning"
  "adequate CPU": "info"
  "sufficient processing": "info"
  "meets minimum": "info"

default_severity: warning
enabled: true